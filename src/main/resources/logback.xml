<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <!-- ThresholdFilter为系统定义的拦截器，例如我们用ThresholdFilter来过滤掉DEBUG级别以下的日志不输出到文件中 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>

    <!-- RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
    <!-- 以下的大概意思是：
        先按日期存日志，日期变了，将前一天的日志文件名重命名为XXX%日期%索引，新的日志仍然是ssm.log-->
    <appender name="ssm" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>J:/tomcat/apache-tomcat-9.0.33/logs/ssm.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 -->
            <fileNamePattern>J:/tomcat/apache-tomcat-9.0.33/logs/ssm.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <!-- 每产生一个日志文件，该日志文件的保存期限为10天 -->
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <!-- pattern节点，用来设置日志的输入格式 -->
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
    </appender>


    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>J:/tomcat/apache-tomcat-9.0.33/logs/error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>J:/tomcat/apache-tomcat-9.0.33/logs/error.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <!--            <append>true</append>-->
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <!-- 用ThresholdFilter来将ERROR级别及以上的日志输出到error.log中 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <logger name="com.itzjx" additivity="false" level="INFO">
        <appender-ref ref="ssm"/>
        <appender-ref ref="console"/>
    </logger>


    <!-- geelynote mybatis log 日志 -->
    <!--additivity默认为true,向root传递DEBUG及以上日志,交由root的appender打印-->
    <logger name="com.itzjx.dao" level="DEBUG"/>

    <!--<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" >-->
    <!--<appender-ref ref="console"/>-->
    <!--</logger>-->

    <!--<logger name="java.sql.Connection" level="DEBUG">-->
    <!--<appender-ref ref="console"/>-->
    <!--</logger>-->
    <!--<logger name="java.sql.Statement" level="DEBUG">-->
    <!--<appender-ref ref="console"/>-->
    <!--</logger>-->

    <!--<logger name="java.sql.PreparedStatement" level="DEBUG">-->
    <!--<appender-ref ref="console"/>-->
    <!--</logger>-->

    <!--  根节点，用来指定最基础的日志输出级别，只有一个level属性-->
    <root level="DEBUG">
        <appender-ref ref="console"/>
        <appender-ref ref="error"/>
    </root>

</configuration>